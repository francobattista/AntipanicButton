/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.botonantipanico.Receptor;

import excepciones.PortOrIpInvalidException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author franc
 */
public class ConfiguracionReceptor extends javax.swing.JFrame {

    
    private ControladorReceptor parent = null;
    
    private ArrayList<JCheckBox> checkBoxs = new ArrayList<JCheckBox>();
    /**
     * Creates new form configuracionReceptor
     */
    public ConfiguracionReceptor(ControladorReceptor parent) {
        initComponents();
        this.parent=parent;
        
        this.checkBoxs.add(this.asistenciaMedicaCheckBox);
        this.checkBoxs.add(this.seguridadCheckBox);
        this.checkBoxs.add(this.focoIncendioCheckBox);
        
        for(JCheckBox box : this.checkBoxs)
        {
            box.setSelected(true);
        }
        
        this.setVisible(false);
        
        
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox3 = new javax.swing.JCheckBox();
        asistenciaMedicaCheckBox = new javax.swing.JCheckBox();
        focoIncendioCheckBox = new javax.swing.JCheckBox();
        seguridadCheckBox = new javax.swing.JCheckBox();
        todasCheckBox = new javax.swing.JCheckBox();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        portTextField = new javax.swing.JTextField();
        puertoLabel = new javax.swing.JLabel();

        jCheckBox3.setText("jCheckBox3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        asistenciaMedicaCheckBox.setText("Sol. asistencia medica");
        asistenciaMedicaCheckBox.setName("Asistencia medica"); // NOI18N

        focoIncendioCheckBox.setText("Notificar foco incendio");
        focoIncendioCheckBox.setName("Notificacion incendio"); // NOI18N

        seguridadCheckBox.setText("Sol. seguridad");
        seguridadCheckBox.setName("Solicitud seguridad"); // NOI18N

        todasCheckBox.setText("Todas");
        todasCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todasCheckBoxActionPerformed(evt);
            }
        });

        saveButton.setText("Guardar");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Activar/desactivar");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("CONFIGURACION NOTIFICACIONES");

        puertoLabel.setText("Puerto");
        puertoLabel.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(asistenciaMedicaCheckBox)
                                        .addGap(54, 54, 54))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(focoIncendioCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(todasCheckBox)
                                    .addComponent(seguridadCheckBox))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(puertoLabel)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveButton)
                                .addGap(18, 18, 18)
                                .addComponent(cancelButton)
                                .addGap(27, 27, 27))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(portTextField)
                                .addGap(254, 254, 254))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asistenciaMedicaCheckBox)
                    .addComponent(seguridadCheckBox))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(focoIncendioCheckBox)
                    .addComponent(todasCheckBox))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(puertoLabel))
                        .addContainerGap(109, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveButton)
                            .addComponent(cancelButton))
                        .addGap(15, 15, 15))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void todasCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todasCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_todasCheckBoxActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        
        String port=this.portTextField.getText();
        if(this.parent.validaConexion("0.0.0.0",port))
        {
            this.parent.setPort(port);
            this.parent.setConectionOn(false);
            this.setActions();
            this.dispose();
        }
        else
        {
            try
            {
                this.portTextField.setText(this.parent.getPort());
                this.puertoIPInvalidos();
            }
            catch(PortOrIpInvalidException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
            
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.portTextField.setText(this.parent.getPort());
        HashMap<String,Boolean> acc = this.parent.getHash();
        this.asistenciaMedicaCheckBox.setSelected(acc.get("Asistencia medica"));
        this.seguridadCheckBox.setSelected(acc.get("Solicitud seguridad"));
        this.focoIncendioCheckBox.setSelected(acc.get("Notificacion incendio"));
        System.out.println(evt.getActionCommand());
        if(evt.getActionCommand().equals("Cancelar")) //que cierre si viene de cancel solamente
            this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed


    public void puertoIPInvalidos() throws PortOrIpInvalidException
    {
        throw new PortOrIpInvalidException("PUERTO o IP invalido");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox asistenciaMedicaCheckBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox focoIncendioCheckBox;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField portTextField;
    private javax.swing.JLabel puertoLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox seguridadCheckBox;
    private javax.swing.JCheckBox todasCheckBox;
    // End of variables declaration//GEN-END:variables


    public String getPort() 
    {
        return this.portTextField.getText();
    }

    
    public void setActions(){
        
        HashMap<String,Boolean> acciones = new HashMap(); 
        for(JCheckBox check : this.checkBoxs )
        {
            acciones.put(check.getName(),check.isSelected());
        }
        this.parent.setActions(acciones);
        
    }
    
    public void setMainConfiguration(HashMap<String,Boolean> hash,String port){

        this.asistenciaMedicaCheckBox.setSelected(hash.get("Asistencia medica"));
        this.focoIncendioCheckBox.setSelected(hash.get("Notificacion incendio"));
        this.seguridadCheckBox.setSelected(hash.get("Solicitud seguridad"));
        this.portTextField.setText(port);
    }
    

    
}
